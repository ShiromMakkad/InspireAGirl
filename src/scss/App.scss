@import "bootstrapTheme";

//This places the image in the right place and makes sure it scales well for desktops and phones
#img {
  object-fit: cover;
  width: 100%;
  min-height: 70vh;
  max-height: 85vh;
}

//This sets the tint on the image. From https://cssfox.co/=maxim-aginsky/log/three-ways-to-tint-image-with-css3-box-shadow-multiple-backgrounds-and-pseudo-elements. It's method 2
html {
  #tint {
    position: relative;
    //display: inline-block; had to remove this for the image placement css to work. Doesn't affect tint
  }

  #tint:before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    box-shadow: 0 3000px rgba($darkShade, 0.45) inset;
  }
}

#banner {
  border-bottom: 2px solid;
}

//This centers the banner text on top of the image
html {
  #banner {
    position: relative;
  }

  #bannerText {
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

//banner text styling
#bannerText {
  h1 {
    color: white;
    font-size: 4.3rem;
    font-weight: 600;
  }

  h3 {
    color: white;
    padding-bottom: 1.5rem;
    font-size: 1.8rem;
  }

  Button {
    padding-right: 1.6rem;
    padding-left: 1.6rem;
  }
}

//Scroll To Top
#scrollTop {
  opacity: 0;
  transition: opacity 0.4s ease;

  border-radius: 100px;

  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
}

//problem section
html {
  //This aligns the container for the whole problem section
  #problem {
    margin: 2rem 0rem;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  //This container has the list of icons (everything besides the h1 tag in the problem section)
  #problemIcon {
    width: 90%;
    display: flex;
    flex-direction: row;
    justify-content: center;
    flex-wrap: wrap;
    align-items: center;
    margin: 2rem 0rem;
  }

  //Not to be confused with the above tag. This is for the container for each icon and text
  .problemIconContainer {
    text-align: center;
    margin: 0rem 2rem;
  }

  //This styles the icons themselves
  .problemIcons {
    color: $primary;
    margin: 1.25rem;
  }

  //This styles each icon's caption
  .iconCaption {
    max-width: 250px;
    font-size: 1.05rem;
  }

  //The wrapIcons divs are just there to make the icons wrap two at a time.
  //The parent div is flex-wrap too, so when the screen gets too small, the wrapIcons divs get stacked on top of each other.
  //When the screen gets even smaller, the wrapIcons divs are flex-wrap, so the icons will be stacked on top of each other, so you'll have all 4 icons on top of each other.
  .wrapIcons {
    display: flex;
    flex-direction: row;
    justify-content: center;
    flex-wrap: wrap;
  }
}

//About Us
html {
  //This is the styling for the main container. It vertically and horizontally aligns the container contents
  #aboutUs {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;

    //Flex-wrap doesn't work well for this purpose. The image just keeps getting smaller and smaller without going underneath the text. This is best.
    @media only screen and (max-width: $md) {
      flex-direction: column;
    }
  }

  //This adds margin and tells this component to be 2/5ths of the total width
  #aboutUsText {
    margin: 2rem;
    flex: 2;
  }

  //The image is 3/5ths of the total width
  #aboutUsImageContainer {
    margin: 2rem;
    flex: 3;

    padding: 10px; //The purple background adds 10px on all sides, but doesn't move the DOM around since it uses position relative. This will add the appropriate spacing.
  }

  //This is the image itself. To create the purple background, we have to move the image the desired amount from the edge of the purple background
  #aboutUsImage {
    position: relative;
    bottom: 20px;
    left: 20px;
  }

  //For the purple background to be centered, we have to move it half of the distance to the image in the opposite direction.
  //The background will be 10px off center to the right. The image will be 20px to the left of the purple background, or 10px off center to the left
  #aboutUsImageBackground {
    background-color: $brandColor;

    position: relative;
    top: 10px;
    right: 10px;
  }
}

//Who We Help (almost the same as about us)
html {
  //This is the styling for the main container. It vertically and horizontally aligns the container contents
  #whoWeHelp {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;

    //Flex-wrap doesn't work well for this purpose. The image just keeps getting smaller and smaller without going underneath the text. This is best.
    @media only screen and (max-width: $md) {
      flex-direction: column;
    }
  }

  //This adds margin and tells this component to be 2/5ths of the total width
  #whoWeHelpText {
    margin: 2rem;
    flex: 2;
  }

  //The image is 3/5ths of the total width
  #whoWeHelpImageContainer {
    margin: 2rem;
    flex: 3;

    padding: 10px;
  }

  //For all the purple background code, see the about us explanation
  #whoWeHelpImage {
    position: relative;
    bottom: 20px;
    left: 20px;
  }

  #whoWeHelpImageBackground {
    background-color: $brandColor;

    position: relative;
    top: 10px;
    right: 10px;
  }
}

#scrollTest {
  height: 1000px;
}
